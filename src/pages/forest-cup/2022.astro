---
import { getCollection, type CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import { getMemberImage } from '@lib/memberUtils';
import App from '@layouts/App.astro'; 
import MatchCard from '@components/MatchCard.astro'; 
import MatchCardCompact from '@components/MatchCardCompact.astro'; 
import Bracket from '@components/tournaments/Bracket.astro'; 
import Groups from '@components/tournaments/Groups.astro';
import KnockoutMatches from '@components/tournaments/KnockoutMatches.astro';
import TournamentGrid from '@components/tournaments/TournamentGrid.astro'; 
import TournamentStats from '@components/tournaments/TournamentStats.astro';
import TournamentStandings from '@components/tournaments/TournamentStandings.astro';
import { getMatchWinner } from '@lib/matchUtils.ts';
import TournamentHero from '@components/tournaments/TournamentHero.astro';
import Headlines from '@components/tournaments/Headlines.astro';

const tournamentsCollection = await getCollection('tournaments');
// const matchesCollection = await getCollection('matches');
const matchesCollection = (await getCollection('matches'))
  .filter(match => match.slug.startsWith('forest-cup-2022/'));
const membersCollection = await getCollection('members');

const TOURNAMENT_ID = 1;
const tournamentEntry = tournamentsCollection.find(t => t.data.id === TOURNAMENT_ID);

if (!tournamentEntry) {
  // throw new Error(`Torneo con ID "${TOURNAMENT_ID}" no encontrado en la colección 'tournaments'.`);
  return Astro.redirect('/404');
}

const FC2022Data = tournamentEntry.data;
const { Content } = await tournamentEntry.render();

// Matches
const fc2022Matches = matchesCollection
  /* .filter(match => match.data.tournament_id === TOURNAMENT_ID) */
  .sort((a, b) => a.data.date.getTime() - b.data.date.getTime()); // Ordenar por fecha
const knockoutMatches = fc2022Matches.filter(match => match.data.stage === 'knockout');

// Imagenes
import FC22Logo from '@images/tournaments/2022/logo.png'; 
import Champions from '@images/tournaments/2022/atsvea-champions.png';
import Greenaway from '@images/tournaments/2022/greenaway.png';
import WolfFreeKick from '@images/tournaments/2022/wolf-freekick.png';
import KaskBicycleKick from '@images/tournaments/2022/kask-bicycle.png';
import FinalMatch from '@images/tournaments/2022/final-match.png';
import Vela from '@images/tournaments/2022/vela.png';
import Dartmouth from '@images/tournaments/2022/dartmouth.png';

// Función auxiliar para encontrar los partidos de una fixture específica (si es necesario)
// Nota: Esto puede ser complejo si la estructura de `FC2022Data` no coincide perfectamente
// con cómo quieres mostrar los partidos de `fc2022Matches`.
const getMatchesForFixture = (stageName?: string, groupName?: string, fixtureName?: string) => {
    return fc2022Matches.filter(m =>
        (!stageName || m.data.stage === stageName) &&
        (!groupName || m.data.group === groupName) &&
        (!fixtureName || m.data.fixture === fixtureName)
    );
}

const pageTitle = `FFC - ${FC2022Data.name || 'Forest Cup'}`;
const winner = getMatchWinner(getMatchesForFixture('knockout', undefined, 'Final')[0].data); 

const headlines = [
  {
    title: 'Revive the Final',
    image: FinalMatch,
    link: 'https://youtu.be/dxx2pF9TOR4?si=oDugjymEcqpIWEln',
    noblank: true,
  },
  {
    title: 'Watch All Goals',
    image: Greenaway,
    link: 'https://youtu.be/HQJcfs5rKrs?si=EjpyeGgIAh2x_be2',
    noblank: true,
  },
  {
    title: 'Kask incredible bicycle kick',
    image: KaskBicycleKick,
    link: 'https://youtube.com/clip/UgkxnRSBN8vsKt9WX1JlmCPPzJoZjkVbfBj3?si=T4pFoq9ZXLGn_4GT',
    noblank: true,
  },
  {
    title: 'Vela: Best player',
    image: Vela,
    link: '#prizes',
    noblank: false,
  },
  {
    title: 'Malcom Dartmouth\'s Hat-Trick to comeback Jutsa',
    image: Dartmouth,
    link: 'https://youtu.be/vZ7o6dRT740?si=FTXSTWBlnCFQVdGq&t=220',
    noblank: true,
  },
  {
    title: 'Wolf\'s free kick awarded as best goal',
    image: WolfFreeKick,
    link: 'https://youtube.com/clip/UgkxJhD0B2OAPLnGjNjEO64Aj6XrYj5Gelnx?si=8nYsC4Cw5oJ_bObF',
    noblank: true,
  }
];
---

<App title={pageTitle}>
  <main class="flex flex-col items-center relative">
    <div class="flex flex-col justify-center items-center bg-gradient-to-b from-transparent to-green-900/50 w-full">
      <TournamentGrid currentTournament={FC2022Data}/>
      <TournamentHero currentTournament={FC2022Data} members={membersCollection} />
    </div>
    <!-- News -->
    <Headlines headlines={headlines}/>

    <TournamentStats
    tournament={tournamentEntry}
    matches={fc2022Matches}
    members={membersCollection}
    />
    
    <Groups
    matches={fc2022Matches}
    members={membersCollection.filter(member => FC2022Data.participants.includes(member.data.name))}
    />
    
    <KnockoutMatches
    knockoutMatches={knockoutMatches}
    members={membersCollection}
    />
   <!--  <div class="flex flex-col justify-center items-center w-full gap-4 py-4">
      <Bracket matches={fc2022Matches} tournament={FC2022Data} members={membersCollection} />
    </div> -->
    <!-- <div class="prose dark:prose-invert bg-white dark:bg-green-900 shadow-lg rounded-lg p-6 my-8 w-full max-w-4xl mx-auto">
       <h2 class="text-2xl font-semibold mb-4 text-gray-900 dark:text-white border-b pb-2 border-gray-200 dark:border-green-600">Tournament Notes</h2>
       <Content />
    </div> -->
    <TournamentStandings
    tournament={tournamentEntry}
    matches={fc2022Matches}
    members={membersCollection.filter(member => FC2022Data.participants.includes(member.data.name))}
    />
  </main>
</App>