---
import { getCollection, type CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import App from '../../layouts/App.astro'; 
import MatchCard from '../../components/MatchCard.astro'; 
import MatchCardCompact from '../../components/MatchCardCompact.astro'; 
import Bracket from '../../components/tournaments/Bracket.astro'; 
import Groups from '../../components/tournaments/Groups.astro';
import KnockoutMatches from '../../components/tournaments/KnockoutMatches.astro';
import TournamentGrid from '../../components/tournaments/TournamentGrid.astro'; 
import TournamentStats from '../../components/tournaments/TournamentStats.astro';
import { getMatchWinner } from '../../lib/matchUtils.ts';
import { getMemberImage } from '../../lib/memberUtils';

const tournamentsCollection = await getCollection('tournaments');
const matchesCollection = (await getCollection('matches'))
  .filter(match => match.slug.startsWith('forest-cup-2020/'));
const membersCollection = await getCollection('members');

const TOURNAMENT_ID = 0;
const tournamentEntry = tournamentsCollection.find(t => t.data.id === TOURNAMENT_ID);

if (!tournamentEntry) {
  // throw new Error(`Torneo con ID "${TOURNAMENT_ID}" no encontrado en la colección 'tournaments'.`);
  return Astro.redirect('/404');
}

const FC2020Data = tournamentEntry.data;
const { Content } = await tournamentEntry.render();

// Matches
const fc2020Matches = matchesCollection
  /* .filter(match => match.data.tournament_id === TOURNAMENT_ID) */
  .sort((a, b) => a.data.date.getTime() - b.data.date.getTime()); // Ordenar por fecha
const knockoutMatches = fc2020Matches.filter(match => match.data.stage === 'knockout');

import FC20Logo from '../../assets/images/tournaments/2020/logo.png'; 
import FCLogo from '../../assets/images/tournaments/forest-cup.png';
import TournamentStandings from '../../components/tournaments/TournamentStandings.astro';

// Función auxiliar para encontrar los partidos de una fixture específica (si es necesario)
// Nota: Esto puede ser complejo si la estructura de `FC2020Data` no coincide perfectamente
// con cómo quieres mostrar los partidos de `fc2020Matches`.
const getMatchesForFixture = (stageName?: string, groupName?: string, fixtureName?: string) => {
    return fc2020Matches.filter(m =>
        (!stageName || m.data.stage === stageName) &&
        (!groupName || m.data.group === groupName) &&
        (!fixtureName || m.data.fixture === fixtureName)
    );
}

const pageTitle = `FFC - ${FC2020Data.name || 'Forest Cup'}`;
const winner = getMatchWinner(getMatchesForFixture('knockout', undefined, 'Final')[0].data); 
---

<App title={pageTitle}>
  <main class="flex flex-col items-center">
    <div class="flex flex-col justify-center items-center pb-6 bg-gradient-to-r from-transparent to-transparent via-black/20 w-full">
      <TournamentGrid currentTournament={FC2020Data}/>
      <Image src={FCLogo} alt={`Forest Cup Logo`} class="max-w-7xl lg:w-4xl md:w-2xl xl:w-auto sm:w-lg w-sm" 
      loading={"eager"}
      width={1280}
      />
      <div class="flex justify-between items-start h-full p-6 gap-6">
        <div class="flex flex-col gap-6 items-center">
          {winner && (
            <div class="flex items-center gap-6">
              {getMemberImage(winner, membersCollection) && (
                <Image src={getMemberImage(winner, membersCollection)!} alt={`${winner} Flag`} 
                width={200}
                class="h-24 w-auto rounded-xl object-cover ring-1 ring-green-700" loading={"eager"} />
              )}
              <h1 class="text-5xl font-bold">{winner}</h1>
            </div>
            <div class="flex items-center">
              <h1 class="text-2xl">Champions</h1>
            </div>
          )}
        </div>
      </div>
    </div>

    <div class="prose dark:prose-invert bg-white dark:bg-green-900 shadow-lg rounded-lg p-6 my-8 w-full max-w-4xl mx-auto">
      <h2 class="text-2xl font-semibold mb-4 text-gray-900 dark:text-white border-b pb-2 border-gray-200 dark:border-green-600">Tournament Notes</h2>
      <Content />
   </div>

    <TournamentStats
    tournament={tournamentEntry}
    matches={fc2020Matches}
    members={membersCollection}
    />

    <Groups
    matches={fc2020Matches}
    members={membersCollection.filter(member => FC2020Data.participants.includes(member.data.name))}
    />
    
    <KnockoutMatches
    knockoutMatches={knockoutMatches} members={membersCollection} 
    />
    <div class="flex flex-col justify-center items-center w-full gap-4 py-4">
      <Bracket matches={fc2020Matches} members={membersCollection} />
    </div>

    <TournamentStandings
    tournament={tournamentEntry}
    matches={fc2020Matches}
    members={membersCollection.filter(member => FC2020Data.participants.includes(member.data.name))}
    />

    </main>
</App>