---
import { getTournaments, getMatches, getMembers, getArticles } from '@lib/generalUtils';
import App from '@layouts/App.astro'; 
import Bracket from '@components/tournaments/Bracket.astro'; 
import Groups from '@components/tournaments/Groups.astro';
import KnockoutMatches from '@components/tournaments/KnockoutMatches.astro';
import TournamentStats from '@components/tournaments/TournamentStats.astro';
import TournamentHero from '@components/tournaments/TournamentHero.astro';
import Headlines from '@components/tournaments/Headlines.astro';
import { getMemberByName } from '@lib/memberUtils';
import { getArticlesByTags } from '@lib/articleUtils';
import RelatedNews from '@components/articles/RelatedNews.astro';

const tournamentsCollection = await getTournaments();
const matchesCollection = (await getMatches())
  .filter(match => match.slug.startsWith('forest-cup-2020/'));
const membersCollection = await getMembers();

const TOURNAMENT_ID = 0;
const tournamentEntry = tournamentsCollection.find(t => t.data.id === TOURNAMENT_ID);

if (!tournamentEntry) {
  // throw new Error(`Torneo con ID "${TOURNAMENT_ID}" no encontrado en la colecciÃ³n 'tournaments'.`);
  return Astro.redirect('/404');
}

const FC2020Data = tournamentEntry.data;
const { Content } = await tournamentEntry.render();

// Matches
const fc2020Matches = matchesCollection
  /* .filter(match => match.data.tournament_id === TOURNAMENT_ID) */
  .sort((a, b) => a.data.date.getTime() - b.data.date.getTime()); // Ordenar por fecha
const knockoutMatches = fc2020Matches.filter(match => match.data.stage === 'knockout');

const articles = await getArticles();
const filterTags = [
  "forest-cup",
  "forest-cup-2020",
];

const filteredArticles = getArticlesByTags(articles, filterTags);
import TournamentStandings from '@components/tournaments/TournamentStandings.astro';

const pageTitle = `FFC - ${FC2020Data.name || 'Forest Cup'}`;
const winner = getMemberByName(FC2020Data.champion, membersCollection);
---

<App title={pageTitle}>
  <main class="flex flex-col items-center relative">
    <div class="flex flex-col justify-center items-center bg-gradient-to-r from-transparent to-transparent via-black/20 w-full">
      <!-- <TournamentGrid currentTournament={FC2020Data}/> -->
      <TournamentHero currentTournament={FC2020Data} champion={winner} />
    </div>

    <!-- <Headlines headlines={headlines}/> -->

    <TournamentStats
    tournament={tournamentEntry}
    matches={fc2020Matches}
    members={membersCollection}
    />

    <Groups
    matches={fc2020Matches}
    members={membersCollection.filter(member => FC2020Data.participants && FC2020Data.participants.includes(member.data.name))}
    />
    
    <KnockoutMatches knockoutMatches={knockoutMatches} members={membersCollection} 
    />
    <!-- <div class="flex flex-col justify-center items-center w-full gap-4 py-4">
      <Bracket matches={fc2020Matches} members={membersCollection} />
    </div> -->
    
    <div class="w-full flex flex-col items-center px-6 max-w-8xl">
      <TournamentStandings
      tournament={tournamentEntry}
      matches={fc2020Matches}
      members={membersCollection.filter(member => FC2020Data.participants && FC2020Data.participants.includes(member.data.name))}
      />
    </div>
    <RelatedNews articles={filteredArticles} max={4} />
  </main>
</App>