---
import { type CollectionEntry } from 'astro:content';
import { getArticles, LOCALE } from '@lib/generalUtils';
import { Image } from 'astro:assets';
import App from '@layouts/App.astro';
import ArticleProse from '@components/articles/ArticleProse.astro';

export const prerender = true;

type ArticleType = CollectionEntry<'articles'>;

export async function getStaticPaths() {
  const articles = await getArticles();
  return articles.map((article: ArticleType) => ({
    params: { slug: article.slug },
    props: { article },
  }));
}

const { article } = Astro.props;
const { Content } = await article.render();
const data = article.data;

// Calculate reading time
const wordCount = article.body.split(/\s+/).length;
const readingTime = Math.ceil(wordCount / 225);

const allArticles = await getArticles();

// Get related articles based on tags
const relatedArticles = allArticles
  .filter(a => a.slug !== article.slug && data.tags?.some(tag => a.data.tags?.includes(tag)))
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())
  .slice(0, 4);

// Get recent articles (EXCLUDING current and related)
const recentArticles = allArticles
  .filter(a => 
    a.slug !== article.slug && 
    !relatedArticles.some(related => related.slug === a.slug)
  )
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())
  .slice(0, 4);
---

<App title={`FFC - ${data.title}`}>
  <div class="container mx-auto px-4 py-8">
    <div class="flex flex-col lg:flex-row gap-6 lg:gap-8 max-w-7xl mx-auto">
      <article class="w-full lg:w-2/3 bg-green-950/80 rounded-xl p-4 md:p-6 shadow-2xl">
        <header class="mb-6">
          <h1 class="mb-6 text-2xl md:text-3xl font-extrabold text-white leading-tight md:leading-normal">
            {data.title}
          </h1>
          
          {data.summary && (
            <p class="mb-6 text-base md:text-lg text-white leading-relaxed">
              {data.summary}
            </p>
          )}
          
          <div class="mb-4 flex flex-row flex-wrap items-center gap-2 md:gap-3 text-xs text-green-200">
            <div class="flex items-center gap-1">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-4 h-4 flex-shrink-0">
                <path fill-rule="evenodd" d="M7.5 6a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0ZM3.751 20.105a8.25 8.25 0 0 1 16.498 0 .75.75 0 0 1-.437.695A18.683 18.683 0 0 1 12 22.5c-2.786 0-5.433-.608-7.812-1.7a.75.75 0 0 1-.437-.695Z" clip-rule="evenodd" />
              </svg>
              <span>
                Written by <span class="font-semibold text-green-100">{data.author}</span>
              </span>
            </div>
            <div class="flex items-center gap-1">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-4 h-4 flex-shrink-0">
                <path fill-rule="evenodd" d="M6.75 2.25A.75.75 0 0 1 7.5 3v1.5h9V3A.75.75 0 0 1 18 3v1.5h.75a3 3 0 0 1 3 3v11.25a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3V7.5a3 3 0 0 1 3-3H6V3a.75.75 0 0 1 .75-.75Zm13.5 9a1.5 1.5 0 0 0-1.5-1.5H5.25a1.5 1.5 0 0 0-1.5 1.5v7.5a1.5 1.5 0 0 0 1.5 1.5h13.5a1.5 1.5 0 0 0 1.5-1.5v-7.5Z" clip-rule="evenodd" />
              </svg>
              <span>
                {data.date.toLocaleDateString(LOCALE, { year: 'numeric', month: 'long', day: 'numeric' })}
              </span>
            </div>
            <div class="flex items-center gap-1">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-4 h-4 flex-shrink-0">
                <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25ZM12.75 6a.75.75 0 0 0-1.5 0v6c0 .414.336.75.75.75h4.5a.75.75 0 0 0 0-1.5h-3.75V6Z" clip-rule="evenodd" />
              </svg>
              <span>
                {readingTime} min read
              </span>
            </div>
          </div>
        </header>

        {data.image && (
          <div class="mb-8">
            <Image 
              src={data.image} 
              alt={`Image of ${data.title}`}
              class="rounded-xl shadow-lg h-80 w-full object-cover"
              quality={70}
              width={800}
              loading={"eager"}
              format="webp"
            />
          </div>
        )}

        <ArticleProse>
          <Content />
        </ArticleProse>
        
        {data.tags && data.tags.length > 0 && (
          <div class="mt-4 pt-3">
            <h3 class="text-lg font-semibold text-white mb-3">Tags:</h3>
            <div class="flex flex-wrap gap-2">
              {data.tags.map(tag => (
                <span class="inline-block bg-green-800 hover:bg-green-700/60 rounded px-3 py-1 text-sm text-white transition-colors">
                  {tag}
                </span>
              ))}
            </div>
          </div>
        )}
      </article>

      <aside class="w-full lg:w-1/3">
        <div class="bg-green-950/80 rounded-xl p-5 shadow-2xl sticky top-4 lg:top-8 space-y-6">
          {relatedArticles.length > 0 && (
            <div>
              <h2 class="text-xl font-bold text-white mb-6 pb-2 border-b border-green-800">
                Related Articles
              </h2>
              <div class="space-y-4">
                {relatedArticles.map((relatedArticle) => (
                  <div>
                    <a 
                      href={`/articles/${relatedArticle.slug}`}
                      class="block group rounded-lg p-3 hover:bg-green-900/30 active:bg-green-900/50 transition-colors duration-200"
                    >
                      <div class="flex gap-4">
                        <div class="flex-1 min-w-0">
                          <h3 class="text-sm md:text-base font-semibold text-white group-hover:text-green-400 group-active:text-green-300 line-clamp-2 leading-tight mb-2 transition-colors">
                            {relatedArticle.data.title}
                          </h3>
                          <p class="text-xs text-green-200">
                            {relatedArticle.data.date.toLocaleDateString(LOCALE, { 
                              year: 'numeric', 
                              month: 'short', 
                              day: 'numeric' 
                            })}
                          </p>
                        </div>
                        {relatedArticle.data.image && (
                          <div class="flex-shrink-0">
                            <Image 
                              src={relatedArticle.data.image}
                              alt={`Thumbnail for ${relatedArticle.data.title}`}
                              class="w-24 h-18 object-cover rounded shadow-md group-hover:shadow-lg transition-shadow"
                              quality={30}
                              format="webp"
                              style="aspect-ratio: 4/3;"
                            />
                          </div>
                        )}
                      </div>
                    </a>
                  </div>
                ))}
              </div>
            </div>
          )}

          <div>
            <h2 class="text-xl font-bold text-white mb-6 pb-2 border-b border-green-800">
              Recent Articles
            </h2>
            <div class="space-y-4">
              {recentArticles.map((recentArticle) => (
                <div>
                  <a 
                    href={`/articles/${recentArticle.slug}`}
                    class="block group rounded-lg p-3 hover:bg-green-900/30 transition-colors duration-200"
                  >
                    <div class="flex gap-4">
                      <div class="flex-1 min-w-0">
                        <h3 class="text-sm font-semibold text-white group-hover:text-green-400 line-clamp-2 leading-tight mb-2 transition-colors">
                          {recentArticle.data.title}
                        </h3>
                        <p class="text-xs text-green-200">
                          {recentArticle.data.date.toLocaleDateString(LOCALE, { 
                            year: 'numeric', 
                            month: 'short', 
                            day: 'numeric' 
                          })}
                        </p>
                      </div>
                      {recentArticle.data.image && (
                        <div class="flex-shrink-0">
                          <Image 
                            src={recentArticle.data.image}
                            alt={`Thumbnail for ${recentArticle.data.title}`}
                            class="w-24 h-18 object-cover rounded shadow-md group-hover:shadow-lg transition-shadow"
                            quality={30}
                            format="webp"
                            style="aspect-ratio: 4/3;"
                          />
                        </div>
                      )}
                    </div>
                  </a>
                </div>
              ))}
            </div>
          </div>

          <div class="pt-4 border-t border-green-800">
            <a 
              href="/articles" 
              class="block w-full py-3 px-4 bg-green-700 hover:bg-green-600 text-white text-center font-semibold rounded-lg shadow-md hover:shadow-lg transition-all duration-200"
            >
              View All Articles
            </a>
          </div>
        </div>
      </aside>
    </div>
  </div>
</App>
