---
import { getCollection, type CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import App from '@layouts/App.astro';

export const prerender = true;

type ArticleType = CollectionEntry<'articles'>;

export async function getStaticPaths() {
  const articles = await getCollection('articles');
  return articles.map((article: ArticleType) => ({
    params: { slug: article.slug },
    props: { article },
  }));
}

const { article } = Astro.props;
const { Content } = await article.render();
const data = article.data;

const allArticles = await getCollection('articles');
const recentArticles = allArticles
  .filter(a => a.slug !== article.slug)
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())
  .slice(0, 4);
---

<App title={`FFC - ${data.title}`}>
  <div class="container mx-auto px-4 py-12">
    <div class="flex flex-col lg:flex-row gap-8 lg:gap-12 max-w-7xl mx-auto">
      <article class="w-full lg:w-2/3 bg-green-950/80 rounded-xl p-6 md:p-8 shadow-2xl">
        <header class="mb-8">
          <h1 class="mb-6 text-2xl md:text-3xl font-extrabold text-white leading-tight">
            {data.title}
          </h1>
          
          {data.summary && (
            <p class="mb-6 text-base text-white">
              {data.summary}
            </p>
          )}
          
          <div class="mb-6 flex flex-col sm:flex-row sm:flex-wrap sm:items-center gap-2 sm:gap-4 text-xs text-green-200">
            <span>
              Written by <span class="font-semibold text-green-100">{data.author}</span>
            </span>
            <div class="flex items-center gap-2">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5" />
              </svg>
              <span>
                {data.date.toLocaleDateString(undefined, { year: 'numeric', month: 'long', day: 'numeric' })}
              </span>
            </div>
          </div>
        </header>

        {data.image && (
          <div class="mb-8">
            <Image 
              src={data.image} 
              alt={`Featured image for ${data.title}`}
              class="rounded-xl shadow-lg h-80 w-full object-cover"
              quality={30}
              format="webp"
            />
          </div>
        )}

        <div class="prose prose-invert max-w-none prose-headings:text-white prose-p:text-white prose-li:text-white prose-li:marker:text-white">
          <Content />
        </div>
        
        {data.tags && data.tags.length > 0 && (
          <div class="mt-4 pt-3">
            <h3 class="text-lg font-semibold text-white mb-3">Tags:</h3>
            <div class="flex flex-wrap gap-2">
              {data.tags.map(tag => (
                <span class="inline-block bg-green-800 hover:bg-green-700/60 rounded px-3 py-1 text-sm text-white transition-colors">
                  {tag}
                </span>
              ))}
            </div>
          </div>
        )}
      </article>

      <aside class="w-full lg:w-1/3">
        <div class="bg-green-950/80 rounded-xl p-6 shadow-2xl sticky top-4 lg:top-8">
          <h2 class="text-xl font-bold text-white mb-6 pb-2 border-b border-green-800 inline-block">
            Recent Articles
          </h2>
          
          <div class="space-y-4">
            {recentArticles.map((recentArticle, index) => (
              <div>
                <a 
                  href={`/articles/${recentArticle.slug}`}
                  class="block group rounded-lg p-3 transition-colors duration-200"
                >
                  <div class="flex gap-4">
                    <div class="flex-1 min-w-0">
                      <h3 class="text-sm font-semibold text-white group-hover:underline line-clamp-2 leading-tight mb-2">
                        {recentArticle.data.title}
                      </h3>
                      <p class="text-xs text-green-200">
                        {recentArticle.data.date.toLocaleDateString(undefined, { 
                          year: 'numeric', 
                          month: 'short', 
                          day: 'numeric' 
                        })}
                      </p>
                    </div>
                    
                    <div class="flex-shrink-0">
                      <Image 
                        src={recentArticle.data.image}
                        alt={`Thumbnail for ${recentArticle.data.title}`}
                        class="w-24 h-18 object-cover rounded"
                        quality={30}
                        format="webp"
                        style="aspect-ratio: 4/3;"
                      />
                    </div>
                  </div>
                </a>
                {index < recentArticles.length - 1 && (
                  <div class="border-b border-green-800 mt-2"></div>
                )}
              </div>
            ))}
          </div>
          
          {recentArticles.length === 0 && (
            <p class="text-green-200 text-sm text-center py-8">
              No other articles available
            </p>
          )}
        </div>
      </aside>
    </div>
  </div>
</App>