---
const currentPath = Astro.url.pathname;
import { Image } from 'astro:assets';
import FFCLogo from '@images/FFC-logo.webp';
import Home from '@images/icons/house-solid.svg';
import Ranking from '@images/icons/ranking-star-solid.svg';
import Members from '@images/icons/flag-solid.svg';
import Cup from '@images/icons/trophy-solid.svg';
import Join from '@images/icons/user-solid.svg';
import XMark from '@images/icons/circle-xmark-solid.svg';
import Search from '@images/icons/magnifying-glass-solid.svg';
import Handshake from '@images/icons/handshake-solid-full.svg';
import Newspaper from '@images/icons/newspaper-solid-full.svg';
import YTLogo from '@images/youtube.png';
import TwitchLogo from '@images/twitch.png';
import KickLogo from '@images/kick.png';
import FooterImage from '@images/Footer.png';

import { LINKS } from '@config/links';
import { ROUTES } from '@config/routes';
import { FEATURES } from '@config/features';

const NAV_LINKS = {
  home: {
    href: ROUTES.home,
    label: 'Home',
    icon: Home,
    iconWidth: 20
  },
  forestCup: {
    href: ROUTES.forestCup.index,
    label: 'Forest Cup',
    icon: Cup,
    iconWidth: 20
  },
  championsLeague: {
    href: ROUTES.championsLeague,
    label: 'Champions League',
    shortLabel: 'FCL',
    icon: Cup,
    iconWidth: 20,
    enabled: FEATURES.championsLeague
  },
  members: {
    href: ROUTES.members.index,
    label: 'Members',
    icon: Members,
    iconWidth: 16
  },
  ranking: {
    href: ROUTES.ranking,
    label: 'Ranking',
    shortLabel: 'Rank',
    icon: Ranking,
    iconWidth: 20
  },
  articles: {
    href: ROUTES.articles.index,
    label: 'Articles',
    shortLabel: 'News',
    icon: Newspaper,
    iconWidth: 20
  },
  sponsor: {
    href: ROUTES.sponsors.index,
    label: 'Sponsors',
    icon: Handshake,
    iconWidth: 20
  },
  joinFFC: {
    href: LINKS.forms.newMember,
    label: 'Join FFC',
    shortLabel: 'Join',
    icon: Join,
    iconWidth: 15,
    external: true,
    special: true
  }
};

const isActiveLink = (linkHref: string, currentPath: string) => {
  // Para la página de inicio, debe coincidir exactamente
  if (linkHref === ROUTES.home) {
    return currentPath === linkHref;
  }
  
  // Para rutas específicas, verificar que la ruta actual comience con el linkHref
  // y que el siguiente carácter sea '/' o el final de la cadena
  const normalizedLinkHref = linkHref.endsWith('/') ? linkHref : linkHref + '/';
  const normalizedCurrentPath = currentPath.endsWith('/') ? currentPath : currentPath + '/';
  
  return normalizedCurrentPath.startsWith(normalizedLinkHref);
};

const getLinkClasses = (link: any, isActive: boolean) => {
  if (link.special) {
    return "flex gap-2 items-center py-2 px-3 bg-white rounded-lg text-green-950 group-hover:bg-green-600 group-hover:text-white";
  }
  return `py-2 px-3 rounded-sm flex gap-2 items-center ${isActive ? "text-green-600" : "text-white group-hover:text-green-300"}`;
};

const getIconClasses = (link: any, isActive: boolean) => {
  if (link.special) {
    return "fill-green-950 group-hover:fill-white";
  }
  return `${isActive ? "fill-green-600" : "fill-white group-hover:fill-green-300"}`;
};
---

<div class="main__cont">
  <!-- NAVBAR TOP -->
  <nav class="navbar__top bg-green-1000 w-full z-20 top-0 start-0 border-b border-green-600">
    <div class="navbar__cont max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-3 gap-2">
      <div class="hamburger flex md:hidden">
        <span class="bar"></span>
        <span class="bar"></span>
        <span class="bar"></span>
      </div>
      <a href={NAV_LINKS.home.href} class="flex items-center m-auto space-x-3 rtl:space-x-reverse md:m-0 flex-shrink-0">
        <Image src={FFCLogo} alt="FFC Logo" loading="eager" height={100} quality={70} format="webp" class="navbar__logo"/>
      </a>
      
      <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar-sticky">
        <ul class="flex flex-col p-4 md:p-0 mt-4 font-medium border rounded-lg md:space-x-1 lg:space-x-4 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 border-gray-700">
          {Object.entries(NAV_LINKS).map(([key, link]) => {
            if (link.enabled === false) return null;
            const isActive = isActiveLink(link.href, currentPath);
            const Icon = link.icon;
            return (
              <li class="group" key={key}>
                <a 
                  href={link.href} 
                  class={`${getLinkClasses(link, isActive)} ${link.special ? 'md:px-2 lg:px-3' : 'md:px-1 lg:px-3'} text-sm lg:text-base whitespace-nowrap`}
                  target={link.external ? "_blank" : undefined}
                >
                  <Icon 
                    width={link.iconWidth} 
                    class={getIconClasses(link, isActive)}
                  />
                  {link.shortLabel && link.label ? (
                    <>
                      <span class="inline xl:hidden">{link.shortLabel}</span>
                      <span class="hidden xl:inline">{link.label}</span>
                    </>
                  ) : (
                    <span class="inline">{link.label}</span>
                  )}
                </a>
              </li>
            );
          })}
        </ul>
      </div>
    </div>
  </nav>
  
  <!-- NAVBAR MOBILE -->
  <div class="navbar border-r-1 border-green-600 flex flex-col" id="navbar-sticky">
    <header class="navbar__header py-8 px-4 flex items-center justify-between border-b-1 border-green-600">
      <div class="navbar__header__logo">
        <a href={NAV_LINKS.home.href}>
          <Image src={FFCLogo} alt="FFC Logo" loading="eager" height={100} quality={70} format="webp" class="navbar__phone__logo"/>
        </a>
      </div>
      <XMark width={30} class="fill-white cursor-pointer close__btn" />
    </header>
    
    <ul class="flex flex-col p-4 font-medium gap-3">
      {Object.entries(NAV_LINKS).map(([key, link]) => {
        if (link.enabled === false || key === 'championsLeague') return null;
        const isActive = isActiveLink(link.href, currentPath);
        const Icon = link.icon;
        return (
          <li class="group" key={key}>
            <a 
              href={link.href} 
              class={getLinkClasses(link, isActive).replace('rounded-lg', 'rounded-md')}
              target={link.external ? "_blank" : undefined}
            >
              <Icon 
                width={link.iconWidth} 
                class={getIconClasses(link, isActive)}
              />
              {link.label}
            </a>
          </li>
        );
      })}
    </ul>
    <div class="mt-auto flex flex-col md:flex-row p-4 border-t border-green-600 gap-6">
      <div class="flex gap-3">
        <!-- Community -->
        <div class="flex-1 text-center">
          <h2 class="text-sm font-semibold uppercase text-white mb-3">Community</h2>
          <ul class="space-y-2 text-gray-400 text-sm">
            <li><a href={LINKS.nationStates.forest} target="_blank" class="hover:underline">Forest</a></li>
            <li><a href={LINKS.social.discordForest} target="_blank" class="hover:underline">Forest Discord</a></li>
            <li><a href={LINKS.social.discordFFC} target="_blank" class="hover:underline">FFC Discord</a></li>
          </ul>
        </div>
  
        <!-- Follow us -->
        <div class="flex-1 text-center">
          <h2 class="text-sm font-semibold uppercase text-white mb-3">Follow us</h2>
          <ul class="space-y-2 text-gray-400 text-sm">
            <li>
              <a href={LINKS.social.youtube} target="_blank" class="hover:underline flex justify-center gap-2 items-center">
                <Image src={YTLogo} alt="YouTube" width={20} format='webp' quality={50} loading={"lazy"} class="hover:opacity-80" />
                YouTube
              </a>
            </li>
            <li>
              <a href={LINKS.social.twitch} target="_blank" class="hover:underline flex justify-center gap-2 items-center">
                <Image src={TwitchLogo} alt="Twitch" width={20} format='webp' quality={50} loading={"lazy"} class="hover:opacity-80" />
                Twitch
              </a>
            </li>
            <li>
              <a href={LINKS.social.kick} target="_blank" class="hover:underline flex justify-center gap-2 items-center">
                <Image src={KickLogo} alt="Kick" width={20} format='webp' quality={50} loading={"lazy"} class="hover:opacity-80" />
                Kick
              </a>
            </li>
          </ul>
        </div>
      </div>

      <!-- Logo -->
      <div class="flex justify-center md:justify-end">
        <a href="https://www.nationstates.net/page=dispatch/id=2525675" target="_blank" class="flex items-center">
          <Image 
            src={FooterImage} 
            width={300} 
            alt="Forestian Football Confederation"
            quality={60} 
            format="webp"
            class="max-w-[200px] h-auto"
          />
        </a>
      </div>
    </div>
  </div>
  <div class="navbar__overlay"></div>
</div>

<style>
  .navbar__logo {
    height: 48px;
    width: auto;
  }
  .hamburger {
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    cursor: pointer;
    .bar {
      display: block;
      width: 30px;
      height: 3px;
      margin: 4px auto;
      background-color: white;
      transition: all 0.3s ease-in-out;
    }
  }
  .navbar {
    position: fixed;
    display: flex;
    height: 100vh;
    width: 70%;
    top: 0;
    left: 0;
    background-color: var(--color-green-950);
    z-index: 50;
    will-change: transform;
    transform: translateX(-100%);
    transition: transform 0.3s ease-in-out;
  }
  .navbar__overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 30;
    opacity: 0;
    pointer-events: none;
    will-change: opacity;
    transition: opacity 0.3s ease-in-out;
  }
  .overlay--active {
    opacity: 1;
    pointer-events: all;
  }
  .navbar--active {
    transform: translateX(0);
  }
  .navbar__phone__logo {
    height: 55px;
    width: auto;
  }
  .main__cont {
    position: relative;
    z-index: 40;
  }

  /* Hide-on-scroll */
  .navbar__top {
    position: fixed;
    top: 0;
    transition: transform 0.2s ease-in-out;
  }
  .navbar__top--hidden {
    transform: translateY(-100%);
  }
</style>

<script>
  const menu = document.querySelector(".hamburger");
  const navbar = document.querySelector(".navbar");
  const closeBtn = document.querySelector(".close__btn");
  const overlay = document.querySelector(".navbar__overlay");
  const navbarTop = document.querySelector(".navbar__top");

  menu.addEventListener("click", () => {
    navbar.classList.toggle("navbar--active");
    overlay.classList.toggle("overlay--active");
  });
  closeBtn.addEventListener("click", () => {
    navbar.classList.remove("navbar--active");
    overlay.classList.remove("overlay--active");
  });
  overlay.addEventListener("click", () => {
    navbar.classList.remove("navbar--active");
    overlay.classList.remove("overlay--active");
  });

  // Hide-on-scroll
  let lastScroll = 0;
  window.addEventListener("scroll", () => {
    const currentScroll = window.scrollY;

    if (currentScroll > lastScroll && currentScroll > 72) {
      navbarTop.classList.add("navbar__top--hidden");
    } else {
      navbarTop.classList.remove("navbar__top--hidden");
    }

    lastScroll = currentScroll;
  });
</script>
