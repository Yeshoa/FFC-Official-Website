---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
// import { members } from '../content/members2.ts';
import { getCollection } from 'astro:content';
const members = await getCollection('members');


const images = import.meta.glob<{ default: ImageMetadata }>("/src/assets/images/members/*.{jpeg,jpg,png,gif,svg}", { eager: true });
// Convertimos el objeto de imágenes a un formato más fácil de usar (ruta -> ImageMetadata)
const imageMap = Object.fromEntries(
  Object.entries(images).map(([path, module]) => [path, module.default])
);
---
<div class="container mx-auto p-6 flex flex-col justify-center items-center border-t border-green-600">
  <h1 class="text-7xl font-bold mb-6">Historical Table</h1>
  <table class="min-w-full w-full table-auto border-collapse">
    <thead class="bg-green-800 text-white ">
      <tr>
        <th class="px-4 py-2 text-center rounded-tl-2xl">Pos</th>
        <th class="px-4 py-2 text-center"></th>
        <th class="px-4 py-2 text-center">Team</th>
        <th class="px-4 py-2 text-center">TP</th>
        <th class="px-4 py-2 text-center">Pts</th>
        <th class="px-4 py-2 text-center">Pld</th>
        <th class="px-4 py-2 text-center">W</th>
        <th class="px-4 py-2 text-center">D</th>
        <th class="px-4 py-2 text-center">L</th>
        <th class="px-4 py-2 text-center">GF</th>
        <th class="px-4 py-2 text-center">GA</th>
        <th class="px-4 py-2 text-center">GD</th>
        <th class="px-4 py-2 text-center rounded-tr-2xl">PR</th>
      </tr>
    </thead>
    <!-- Members -->
    <tbody>
      {[...members].sort((a, b) => {
        // Ordena por puntos (descendente)
        const pointsDiff = b.records.totalPoints - a.records.totalPoints;
        if (pointsDiff !== 0) return pointsDiff;
        
        // Ordena por performance (descendente)
        const performanceA = a.records.totalPoints / a.records.matches;
        const performanceB = b.records.totalPoints / b.records.matches;
        if (performanceA !== performanceB) return performanceB - performanceA;

        // Ordena por torneos jugados (descendente)
        const qualA = a.records.tournamentsPlayed;
        const qualB = b.records.tournamentsPlayed;
        if (qualA !== qualB) return qualB - qualA;

        // Si las performance son iguales, ordena por diferencia de goles (descendente)
        const goalDiffA = a.records.goalsFor - a.records.goalsAgainst;
        const goalDiffB = b.records.goalsFor - b.records.goalsAgainst;
        return goalDiffB - goalDiffA;
      }).map((member, index) => {
        const { name, flagPath, nslink, records } = member;
        const goalDifference = records.goalsFor - records.goalsAgainst;
        const performance = records.matches > 0 ? Math.round((records.totalPoints / (records.matches * 3)) * 100).toFixed(2) : 0;
        // Obtenemos la imagen como ImageMetadata desde el imageMap
        const flagImage = flagPath && imageMap[flagPath];
        return (
          <tr class="border-b border-green-600">
            <td class="px-4 py-2 text-center ">{index + 1}</td>
            <td class="py-2 text-center w-fit">
              {flagPath && <Image src={flagImage} alt={name} class="h-6 w-auto rounded-xl object-cover ring-1 ring-green-700 inline-block"/>}
            </td>
            <td class="px-4 py-2">
              <div class="flex items-center justify-center">
                <a href={nslink} class="hover:underline">{name}</a>
              </div>
            </td>
            <td class="px-4 py-2 text-center font-thin border-s border-green-600">{records.tournamentsPlayed}</td>
            <td class="px-4 py-2 text-center font-bold">{records.totalPoints}</td>
            <td class="px-4 py-2 text-center font-thin">{records.matches}</td>
            <td class="px-4 py-2 text-center font-thin">{records.wins}</td>
            <td class="px-4 py-2 text-center font-thin">{records.draws}</td>
            <td class="px-4 py-2 text-center font-thin">{records.losses}</td>
            <td class="px-4 py-2 text-center font-thin">{records.goalsFor}</td>
            <td class="px-4 py-2 text-center font-thin">{records.goalsAgainst}</td>
            <td class="px-4 py-2 text-center font-thin">{goalDifference}</td>
            <td class="px-4 py-2 text-center border-s border-green-600">% {performance}</td>
          </tr>
        );
      })}
    </tbody>
  </table>
 </div>