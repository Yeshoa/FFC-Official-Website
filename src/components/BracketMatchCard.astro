---
// BracketMatchCard.astro
// Usando Tailwind y respetando los datos existentes
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
interface Props {
  match: {
    match_id: number;
    link?: string;
    team1: string;
    team2: string;
    score: {
      team1_goals: number;
      team2_goals: number;
      team1_extra_time?: number;
      team2_extra_time?: number;
      team1_penalty?: number;
      team2_penalty?: number;
    };
    goals: {
      team: string;
      player: string;
      minute: number;
      penalty: boolean;
    }[];
  };
  teamLogos: ImageMetadata;
}

const { match, teamLogos } = Astro.props;

// Procesamos los resultados
const hasExtraTime = match.score.team1_extra_time !== undefined && match.score.team2_extra_time !== undefined;
const hasPenalty = match.score.team1_penalty !== undefined && match.score.team2_penalty !== undefined;

// Determinamos el ganador
const getWinner = () => {
  if (hasPenalty) {
    return match.score.team1_penalty > match.score.team2_penalty ? match.team1 : match.team2;
  } else if (hasExtraTime) {
    const team1Total = match.score.team1_goals + (match.score.team1_extra_time || 0);
    const team2Total = match.score.team2_goals + (match.score.team2_extra_time || 0);
    return team1Total > team2Total ? match.team1 : team2Total > team1Total ? match.team2 : 'Draw';
  } else {
    return match.score.team1_goals > match.score.team2_goals ? match.team1 : 
           match.score.team2_goals > match.score.team1_goals ? match.team2 : 'Draw';
  }
};

const winner = getWinner();
---

<div class="bg-green-800 rounded-lg p-4">
  <div class="flex flex-col space-y-3">
    <!-- Equipo 1 -->
    <div class="flex items-center justify-between">
      <div class="flex items-center space-x-2">
        {teamLogos && (
          <Image src={teamLogos[match.team1].default} alt={match.team1} class="w-6 h-6 object-contain" />
        )}
        <span class={`${winner === match.team1 ? 'font-bold' : 'font-medium'}`}>
          {match.team1}
        </span>
      </div>
      <div class="flex items-center">
        <span class="font-medium">{match.score.team1_goals}</span>
        {hasExtraTime && (
          <span class="text-gray-500 text-xs ml-1">({match.score.team1_extra_time})</span>
        )}
        {hasPenalty && (
          <span class="text-gray-500 text-xs ml-1">({match.score.team1_penalty})</span>
        )}
      </div>
    </div>
    
    <!-- Equipo 2 -->
    <div class="flex items-center justify-between">
      <div class="flex items-center space-x-2">
        {teamLogos && (
          <Image src={teamLogos[match.team2].default} alt={match.team2} class="w-6 h-6 object-contain" />
        )}
        <span class={`${winner === match.team2 ? 'font-bold' : 'font-medium'}`}>
          {match.team2}
        </span>
      </div>
      <div class="flex items-center">
        <span class="font-medium">{match.score.team2_goals}</span>
        {hasExtraTime && (
          <span class="text-green-500 text-xs ml-1">({match.score.team2_extra_time})</span>
        )}
        {hasPenalty && (
          <span class="text-green-500 text-xs ml-1">({match.score.team2_penalty})</span>
        )}
      </div>
    </div>
    
    <!-- Enlace a detalles si existe -->
    {match.link && (
      <a href={match.link} class="text-white text-sm hover:underline mt-2 inline-block">
        Video
      </a>
    )}
  </div>
</div>