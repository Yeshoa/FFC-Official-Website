---
// --- Astro Component Script ---
// Importaciones necesarias
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import JoinImg from '@images/icons/right-to-bracket-solid.svg';
import Button from '@components/Button.astro';
import { LINKS } from '@config/links';

// Definimos las props para el componente
interface Props {
  heroTitle: string;
  heroSubtitle: string;
  cta: { text: string; href: string; noblank?: boolean; logo: ImageMetadata };
  carouselImages: Array<{
    src: ImageMetadata;
    alt: string;
    className?: string; // Clase opcional para estilos personalizados como object-position
    priority?: boolean; // Para controlar loading="eager" o "lazy"
  }>;
}

// Obtenemos las props
const { heroTitle, heroSubtitle, cta, carouselImages } = Astro.props;

// Validamos que haya al menos una imagen en el carrusel
if (carouselImages.length === 0) {
  throw new Error('Debe proporcionar al menos una imagen para el carrusel.');
}
---

<section class="hero z-0">
  <div class="hero__cont">
    <div class="hero__carrousel">
      {carouselImages.map((img, index) => (
        <Image
          src={img.src}
          alt={img.alt}
          width={1200}
          class={`hero__img ${img.className || ''} ${index === 1 ? 'hero__img--active' : ''}`} // La segunda imagen inicia con animación si es el caso
          format="webp"
          loading={img.priority ? 'eager' : 'lazy'}
          quality={90}
        />
      ))}
    </div>
    <div class="hero__flex">
      <Image src={cta.logo} alt="Logo" height={300} class="hero__logo" format="webp" loading="eager" />
      <div class="hero__text">
        <h1 class="hero__title">{heroTitle}</h1>
        <p class="hero__subtitle">{heroSubtitle}</p>
        <div class="hero__btn__cont">
          <Button hideArrow={true} link={LINKS.forms.newMember} self={!cta.noblank} customClass="hero__btn">
            <JoinImg width={18} class="hero__btn__icon mr-2" fill={"#fff"} />{cta.text}
          </Button>
        </div>
      </div>
    </div>
    <div class="hero__overlay"></div>
    <div class="hero__blur"></div>
  </div>
</section>

<style>
  /* Estilos existentes (los mantengo iguales, pero puedes ajustarlos si es necesario) */
  .hero {
    height: calc(100svh - 72px);
    overflow: hidden;
    .hero__cont {
      position: relative;
    }
    .hero__carrousel {
      position: relative;
      top: 0;
      left: 0;
      width: 100%;
      height: 100svh;
      overflow: hidden;
    }
    .hero__img {
      width: 100%;
      height: 100svh;
      object-fit: cover;
      position: absolute;
      transition: opacity .5s ease-in-out;
      &:nth-child(2) {
        will-change: transform;
        animation: slowMotion 11s linear infinite forwards;
        z-index: 2;
      }
      &:nth-child(3) {
        z-index: 1;
      }
    }
    .hero__img--active {
      animation: slowMotion 11s linear infinite forwards;
    }
    .hero__img--hidden {
      opacity: 0;
    }
    .hero__overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100svh;
      background: linear-gradient(to bottom, rgba(0, 0, 0, 0.3) , rgba(0, 0, 0, .85) 80%);
      will-change: opacity;
      animation: showIn 1.5s ease-in-out .4s forwards;
      opacity: 0;
      z-index: 3;
    }
    .hero__flex {
      position: absolute;
      z-index: 20;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -70%);
      text-align: center;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 3rem;
      width: 100%;
    }
    .hero__blur {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100svh;
      will-change: backdrop-filter;
      animation: blurIn 1.5s ease-in-out .4s forwards;
      opacity: 1;
      backdrop-filter: blur(2px);
      z-index: 2;
    }
    .hero__text {
      display: flex;
      flex-direction: column;
      gap: 2rem;
    }
    .hero__logo {
      will-change: transform, opacity;
      animation: fadeIn 1.5s ease-in-out .4s forwards;
      opacity: 0;
      width: 230px;
    }
    .hero__title {
      font-size: 4rem;
      font-weight: bold;
      will-change: transform, opacity;
      animation: fadeIn 1s ease-in-out  .4s forwards;
      opacity: 0;
      margin: 0;
      line-height: .9;
    }
    .hero__subtitle {
      font-size: 1.3rem;
      will-change: transform, opacity;
      animation: fadeIn 1s ease-in-out .6s forwards;
      opacity: 0;
      margin: 0;
      line-height: 1;
    }
    .hero__btn {
      /* background-color: var(--color-green-700); */
      /* padding: 1rem 2.5rem; */
      /* font-size: 1.1rem; */
      /* font-weight: 500; */
      /* display: inline-block; */
      /* align-self: center; */
      transition: all .2s ease-in-out;
      /* display: flex; */
      /* align-items: center; */
      /* width: fit-content; */
      /* gap: 1rem; */
      /* overflow: hidden; */
      .hero__btn__icon {
        transform: translateX(-10px);
        transition: transform .2s ease-in-out;
      }
      &:hover {
        /* background-color: var(--color-green-600); */
        transform: scale(1.05);
        /* box-shadow: 0 3px 8px rgba(0, 0, 0, .2); */
      }
      &:hover .hero__btn__icon {
        transform: translateX(0) scale(1.2);
      }
    }
    .hero__btn__cont {
      will-change: transform, opacity; 
      animation: fadeIn 1s ease-in-out .8s forwards;
      display: flex;
      justify-content: center;
      opacity: 0;
    }
  }

  @keyframes fadeIn {
    0% {
      transform: scale(.9);
      opacity: 0;
    }
    100% {
      transform: scale(1);
      opacity: 1;
    }
  }
  @keyframes showIn {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
  @keyframes blurIn {
    15% {
      backdrop-filter: blur(3px);
    }
    50% {
      backdrop-filter: blur(6px);
    }
    80% {
      backdrop-filter: blur(0);
    }
    100% {
      backdrop-filter: blur(0);
    }
  }
  @keyframes slowMotion {
    from {
      transform: translateX(0) scale(1);
    }
    to {
      transform: translateX(-2%) scale(1.05);
    }
  }

  @media (width < 768px) {
    .hero {
      .hero__flex {
        flex-direction: column;
        gap: 2rem;
      }
      .hero__title {
        font-size: 2.6rem;
      }
      .hero__text {
        gap: 1rem;
      }
      .hero__flex {
        padding: 0 1rem;
      }
      .hero__btn {
        margin-top: 1rem;
        font-size: 1.2rem;
      }
    }
  }
</style>

<script>
  function showNextImage() {
    const carrouselImages = document.querySelectorAll('.hero__img');
    const carrousel = document.querySelector('.hero__carrousel');
    if (!carrousel || carrouselImages.length < 2) return;

    const first = carrouselImages[0];
    const second = carrouselImages[1];

    second.classList.add('hero__img--hidden');
    const nextElem = second.nextElementSibling || carrouselImages[0]; // Ciclo circular
    addAnimation(nextElem);

    setTimeout(() => {
      carrousel.appendChild(first);
      second.classList.remove('hero__img--hidden');
    }, 500);
  }

  function addAnimation(elem: HTMLElement) {
    elem.classList.add('hero__img--active');
    setTimeout(() => {
      elem.classList.remove('hero__img--active');
    }, 11000); 
  }

  // Iniciar el intervalo solo si hay más de una imagen
  const carrouselImages = document.querySelectorAll('.hero__img');
  if (carrouselImages.length > 1) {
    setInterval(showNextImage, 10000);
  }

  // Asegurar que la primera animación se active si aplica
  const initialActive = document.querySelector('.hero__img--active');
  if (initialActive) {
    addAnimation(initialActive);
  }
</script>