---
// import StarIcon from '@images/icons/star-solid.svg';
// import SkullIcon from '@images/icons/skull-crossbones-solid.svg';

const { count, color, IconComponent, fullColor } = Astro.props;
// Determina qué componente de icono usar
// const IconComponent = iconType === 'skull' ? SkullIcon : StarIcon;
---

{count > 0 && (
  <div class="stars-container absolute bottom-3.5 left-1/2 transform -translate-x-1/2 flex flex-col items-center gap-0.5 h-4">
    {count >= 17 ? (
      <div class="flex flex-col items-center gap-0.5 h-6">
        <div class="flex justify-center items-center gap-0.5">
          {Array.from({ length: 8 }).map(() => (
            <IconComponent class={`w-2.5 h-2.5 ${color}`} />
          ))}
        </div>
        <div class="flex justify-center items-center gap-0.5">
          {Array.from({ length: 8 }).map(() => (
            <IconComponent class={`w-2.5 h-2.5 ${color}`} />
          ))}
        </div>
        <div class="absolute top-1 flex justify-center items-center">
          <span class={`text-xs font-bold drop-shadow-[0_1px_1px_rgba(0,0,0,0.5)] bg-gradient-to-r from-transparent ${fullColor} to-transparent px-10`}>
            <span class="drop-shadow-[0_1px_1px_rgba(0,0,0,1)]">
              x{count}
            </span>
          </span>
        </div>
      </div>
    ) : count < 7 ? (
      // Fila horizontal normal
      <div class="flex justify-center items-end h-10 gap-0.5">
        {Array.from({ length: count }).map(() => (
          <IconComponent class={`w-3 h-3 ${color}`} />
        ))}
      </div>
    ) : (
      // Para 7, 8, 9 estrellas - distribución en dos filas
      <div class="flex flex-col items-center gap-0.5 h-6">
        <div class="flex justify-center items-center gap-0.5">
          {Array.from({ length: count % 2 === 0 ? Math.floor(count / 2) : Math.ceil(count / 2) }).map(() => (
            <IconComponent class={`w-2.5 h-2.5 ${color}`} />
          ))}
        </div>
        <div class="flex justify-center items-center gap-0.5">
          {Array.from({ length: Math.floor(count / 2) }).map(() => (
            <IconComponent class={`w-2.5 h-2.5 ${color}`} />
          ))}
        </div>
      </div>
    )}
  </div>
)}

<style>
  /* Existing styles for .star-collar, .collar-chain, .star-pendant, .stars-container */
  .star-collar {
    z-index: 20;
  }

  .collar-chain {
    color: inherit;
  }

  .stars-container {
    z-index: 20;
  }
</style>
