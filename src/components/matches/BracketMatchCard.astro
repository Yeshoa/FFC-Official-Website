---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { getMemberByName, getMemberImage } from 'src/utils/memberUtils';
import { getMatchResult, getMatchWinnerIncludingPenalties } from 'src/utils/matchUtils';
import { LOCALE } from '@config/constants';

interface Goal {
  team: string;
  player: string;
  minute: number;
  penalty?: boolean;
  ownGoal?: boolean;
  assist?: string;
}

interface Penalty {
  order: number;
  team: string;
  player: string;
  scored: boolean;
}

interface Match {
  tournament_id: number;
  stage?: string;
  fixture: string;
  team1: string;
  team2: string;
  status: "scheduled" | "played" | "canceled";
  date: Date;
  link?: string;
  goals?: Goal[];
  penalties?: Penalty[];
  redCards?: {
    team: string;
    player: string;
    minute: number;
  }[];
}

interface Props {
  match: Match;
  members: CollectionEntry<'members'>[];
}

const { match, members } = Astro.props;
// Verificar si el partido ya se jug칩
const isPlayed = match.data.status === 'played';

// Contar goles por equipo (solo si el partido se jug칩)
const team1Goals = isPlayed && match.data.goals ? match.data.goals.filter(g => g.team === match.data.team1).length : 0;
const team2Goals = isPlayed && match.data.goals ? match.data.goals.filter(g => g.team === match.data.team2).length : 0;

// Verificar si hubo penales
const hasPenalties = isPlayed && match.data.penalties && match.data.penalties.length > 0;

// Contar penales convertidos por equipo
const team1Penalties = hasPenalties ? match.data.penalties!.filter(p => p.team === match.data.team1 && p.scored).length : 0;
const team2Penalties = hasPenalties ? match.data.penalties!.filter(p => p.team === match.data.team2 && p.scored).length : 0;

const winner = getMatchWinnerIncludingPenalties(match.data);

// Teams objects
const team1 = getMemberByName(match.data.team1, members);
const team2 = getMemberByName(match.data.team2, members);

// Formatear la fecha si el partido est치 programado
const formattedDate = match.data.status === 'scheduled' 
  ? match.data.date.toLocaleDateString(LOCALE, { day: '2-digit', month: 'short' })
  : null;
---
<div class="bg-green-950/70 rounded-lg p-4 w-full hover:bg-black/30">
  <div class="flex flex-col space-y-3">
    
    <!-- Equipo 1 -->
    <div class="flex items-center justify-between">
      <div class="flex items-center space-x-2">
        {team1?.data.flagPath || team1?.data.logoPath ? (
          <Image src={team1?.data.flagPath || team1?.data.logoPath} alt={team1?.data.name} 
          class="w-6 h-6 object-contain" width={24} height={24} loading={"lazy"} quality={10} format="webp" />
        ) : (
          <div class="w-6 h-6 bg-gray-600 rounded-md"></div>
        )}
        <a class={`${winner === match.data.team1 ? 'font-bold' : 'font-light'} hover:underline`} href={`/members/${team1?.slug}`}>
          {team1?.data.code}
        </a>
      </div>
      {isPlayed ? (
        <div class="flex text-center items-center">
          <span class={`${winner === match.data.team1 ? 'font-bold text-lg' : 'font-light'}`}>{team1Goals}</span>
          {hasPenalties && (
            <span class={`text-xs ml-1 ${winner === match.data.team1 ? 'font-bold text-lg text-yellow-400' : 'font-light text-gray-400'}`}>({team1Penalties})</span>
          )}
        </div>
      ) : (
        <div class="text-xs text-gray-400">TBD</div>
      )}
    </div>

    <!-- Equipo 2 -->
    <div class="flex items-center justify-between">
      <div class="flex items-center space-x-2">
        {team2?.data.flagPath || team2?.data.logoPath ? (
          <Image src={team2?.data.flagPath || team2?.data.logoPath} alt={team2?.data.name} 
          class="w-6 h-6 object-contain" width={24} height={24} loading={"lazy"} quality={10} format="webp" />
        ) : (
          <div class="w-6 h-6 bg-gray-600 rounded-md"></div>
        )}
        <a class={`${winner === match.data.team2 ? 'font-bold' : 'font-light'} hover:underline` } href={`/members/${team2?.slug}`}>
          {team2?.data.code}
        </a>
      </div>
      {isPlayed ? (
        <div class="flex items-center text-center">
          <span class={`${winner === match.data.team2 ? 'font-bold text-lg' : 'font-light'}`}>{team2Goals}</span>
          {hasPenalties && (
            <span class={`text-xs ml-1 ${winner === match.data.team2 ? 'font-bold text-lg text-yellow-400' : 'font-light text-gray-400'}`}>({team2Penalties})</span>
          )}
        </div>
      ) : (
        <div class="text-xs text-gray-400">TBD</div>
      )}
    </div>

    {/* Mostrar fecha si el partido est치 programado */}
    {match.data.status === 'scheduled' && formattedDate && (
      <div class="text-center text-xs text-gray-400 mt-1">
        {formattedDate}
      </div>
    )}

    {/* Enlace al video si existe */}
    <!-- {match.data.link && (
      <a href={match.data.link} class="text-white text-sm hover:underline mt-2 inline-block" target="_blank" rel="noopener noreferrer">
        Video
      </a>
    )} -->
  </div>
</div>