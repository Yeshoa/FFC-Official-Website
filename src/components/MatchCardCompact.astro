---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

interface Props {
  match: {
    match_id: number;
    link?: string;
    team1: string;
    team2: string;
    score: {
      team1_goals: number;
      team2_goals: number;
      team1_extra_time?: number;
      team2_extra_time?: number;
      team1_penalty?: number;
      team2_penalty?: number;
    };
    goals: {
      team: string;
      player: string;
      minute: number;
      penalty: boolean;
    }[];
  };
  teamLogos: Record<string, ImageMetadata>;
}

const { match, teamLogos } = Astro.props;

const hasExtraTime = match.score.team1_extra_time !== undefined && match.score.team2_extra_time !== undefined;
const hasPenalty = match.score.team1_penalty !== undefined && match.score.team2_penalty !== undefined;

const getWinner = () => {
  if (hasPenalty) {
    return match.score.team1_penalty > match.score.team2_penalty ? match.team1 : match.team2;
  } else if (hasExtraTime) {
    const team1Total = match.score.team1_goals + (match.score.team1_extra_time || 0);
    const team2Total = match.score.team2_goals + (match.score.team2_extra_time || 0);
    return team1Total > team2Total ? match.team1 : team2Total > team1Total ? match.team2 : 'Draw';
  } else {
    return match.score.team1_goals > match.score.team2_goals ? match.team1 : 
           match.score.team2_goals > match.score.team1_goals ? match.team2 : 'Draw';
  }
};

const winner = getWinner();
---

<div class="relative bg-green-950/70 rounded-lg p-4 group w-72 hover:bg-black/30">
  <div class="flex flex-col space-y-3">
    <!-- Equipo 1 -->
    <div class="flex items-center justify-between">
      <div class="flex items-center space-x-2">
        <Image src={teamLogos[match.team1].default} alt={match.team1} class="w-6 h-6 object-contain" />
        <span class={`${winner === match.team1 ? 'font-bold' : 'font-medium'}`}>{match.team1}</span>
      </div>
      <div class="flex items-center">
        <span class="font-medium">{match.score.team1_goals}</span>
        {hasExtraTime && <span class="text-gray-500 text-xs ml-1">({match.score.team1_extra_time})</span>}
        {hasPenalty && <span class="text-gray-500 text-xs ml-1">({match.score.team1_penalty})</span>}
      </div>
    </div>
    
    <!-- Equipo 2 -->
    <div class="flex items-center justify-between">
      <div class="flex items-center space-x-2">
        <Image src={teamLogos[match.team2].default} alt={match.team2} class="w-6 h-6 object-contain" />
        <span class={`${winner === match.team2 ? 'font-bold' : 'font-medium'}`}>{match.team2}</span>
      </div>
      <div class="flex items-center">
        <span class="font-medium">{match.score.team2_goals}</span>
        {hasExtraTime && <span class="text-gray-500 text-xs ml-1">({match.score.team2_extra_time})</span>}
        {hasPenalty && <span class="text-gray-500 text-xs ml-1">({match.score.team2_penalty})</span>}
      </div>
    </div>
  </div>

  <!-- Goles (ocultos por defecto, se muestran al hacer hover) -->
  <div class="absolute top-0 right-0 bg-black/80 text-white text-xs p-2 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity w-60">
    <div class="flex justify-between gap-4">
      <!-- Goles del equipo 1 -->
      <div class="flex-1">
        <p class="font-semibold text-green-400 text-center">{match.team1}</p>
        {match.goals.filter(goal => goal.team === match.team1).length > 0 ? (
          match.goals.filter(goal => goal.team === match.team1).map(goal => (
            <div key={`${goal.player}-${goal.minute}`} class="flex items-center">
              <p>{goal.player} {goal.minute}' {goal.penalty ? "(pen)" : ""}</p>
            </div>
          ))
        ) : (
          <p class="text-center text-gray-400">No goals</p>
        )}
      </div>
      
      <!-- Goles del equipo 2 -->
      <div class="flex-1">
        <p class="font-semibold text-red-400 text-center">{match.team2}</p>
        {match.goals.filter(goal => goal.team === match.team2).length > 0 ? (
          match.goals.filter(goal => goal.team === match.team2).map(goal => (
            <div key={`${goal.player}-${goal.minute}`} class="flex items-center">
              <p>{goal.player} {goal.minute}' {goal.penalty ? "(pen)" : ""}</p>
            </div>
          ))
        ) : (
          <p class="text-center text-gray-400">No goals</p>
        )}
      </div>
    </div>
  </div>
</div>
