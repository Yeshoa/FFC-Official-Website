---
import  {getCollection, type CollectionEntry } from 'astro:content';
import { getMatchResult, getPenaltiesResult } from '@lib/matchUtils.ts';
import { getMemberImage } from '@lib/memberUtils.ts';
import { Image } from 'astro:assets';

interface Props {
  match: CollectionEntry<'matches'>['data'];
  members: CollectionEntry<'members'>[];
}

const tournaments = await getCollection('tournaments');
const { match, members } = Astro.props;
const tournament = tournaments.find(t => t.data.id === match.tournament_id);
const date = new Date(match.date);
const { team1, team2 } = match;
const { team1: score1, team2: score2 } = getMatchResult(match);
const penalties = getPenaltiesResult(match);

const team1Image = getMemberImage(team1, members);
const team2Image = getMemberImage(team2, members);

// Texto de penales si aplica
const penaltyText = penalties
  ? ` (${penalties.team1}–${penalties.team2} p)`
  : '';
---
<div class="bg-green-950/80 rounded-md px-4 py-3 w-full gap-2">
  <div class="text-xs text-gray-300 flex gap-1 justify-between px-3 pb-2">
    <div class="">
      <span class="font-semibold">{tournament?.data.type === 'forest-cup' ? 'Forest Cup' : 'Champions League'} {tournament?.data.edition}</span>
      <span>{match.group ? 'Groups' : match.fixture ? match.fixture : ''}</span>
    </div>
    <span>{date.toLocaleDateString()}</span>
  </div>
  <div class="w-full flex items-center justify-center gap-2 text-sm text-white">
    <!-- Team 1 -->
    <div class="flex items-center gap-2 flex-1 justify-end">
      <span class="truncate max-w-[100px] text-right" title={team1}>{team1}</span>
      {team1Image ? (
        <Image src={team1Image} alt={team1} class="w-5 h-4 object-cover rounded-sm" loading="lazy" />
      ) : (
        <div class="w-5 h-4 bg-gray-600 rounded-sm" />
      )}
    </div>
  
    <!-- Score -->
    <div class="flex items-center gap-1 text-lg font-semibold text-white mx-4">
      <span>{score1}</span>
      <span class="text-gray-400">–</span>
      <span>{score2}</span>
      {penaltyText && (
        <span class="text-xs text-yellow-400 font-normal ml-1">{penaltyText}</span>
      )}
    </div>
  
    <!-- Team 2 -->
    <div class="flex items-center gap-2 flex-1">
      {team2Image ? (
        <Image src={team2Image} alt={team2} class="w-5 h-4 object-cover rounded-sm" loading="lazy" />
      ) : (
        <div class="w-5 h-4 bg-gray-600 rounded-sm" />
      )}
      <span class="truncate max-w-[100px]" title={team2}>{team2}</span>
    </div>
  </div>
</div>

