---
// src/components/TournamentCard.astro
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
// Icons
import Star from "@images/icons/star-solid.svg";
import House from "@images/icons/house-solid.svg";
import People from "@images/icons/people-group-solid.svg";


import { getMemberImage } from 'src/utils/memberUtils';
import defaultFlag from '@images/tournaments/default-flag.png';
import { LINKS } from '@config/links';
import { ROUTES } from '@config/routes';

interface Props {
  tournament: CollectionEntry<'tournaments'>;
}

const { tournament } = Astro.props;
const { data, slug } = tournament;

const {
    type,
    edition,
    name,
    host,
    champion,
    participants,
    banner,
    image,
    heroImg,
    cardImg,
    loadingType, 
} = data;

const mainImage = cardImg || heroImg; // CardImg
/* Route redirect depending on the tournament type */
// const tournamentLink = `/${type}/${edition}`;
const tournamentLink = type === 'forestian-champions-league' ? ROUTES.championsLeague.edition(edition) : ROUTES.forestCup.edition(edition);
const hostFlag = await getMemberImage(host) || defaultFlag; // If there is no host yet, use the default flag
---

<!-- Main Container with horizontal design -->
<a 
  href={tournamentLink} 
  class="group block w-full rounded-2xl overflow-hidden bg-gradient-to-br from-gray-900 via-gray-800 to-black border border-emerald-500/20 shadow-2xl hover:shadow-emerald-400/30 transition-all duration-500 ease-out hover:scale-[1.02] hover:border-emerald-400/40"
>
  <div class="relative w-full min-h-[200px] md:min-h-[240px] lg:min-h-[280px]">
    
    <!-- Background image with enhanced gradient -->
    {mainImage ? (
      <Image
        src={mainImage}
        alt={`${name} Banner`}
        class="absolute inset-0 w-3/4 left-1/4 h-full object-cover transition-all duration-700 group-hover:scale-110 group-hover:brightness-110"
        widths={[800, 1100]}
        sizes="100vw"
        quality={70}
        format="webp"
        loading={loadingType || "lazy"}
      />
    ) : (
      <div class="absolute inset-0 bg-gradient-to-br from-emerald-900/20 via-gray-900 to-black">
        <div class="absolute inset-0 bg-grid-pattern opacity-10"></div>
        <div class="absolute inset-0 bg-gradient-to-r from-emerald-500/10 via-transparent to-blue-500/10 animate-pulse-slow"></div>
      </div>
    )}
    
    <!-- Overlay with multiple gradients for better readability -->
    <div class="absolute inset-0 bg-gradient-to-r from-green-950 via-green-950/50 to-transparent from-33% via-50%"></div>
    <div class="absolute inset-0 bg-gradient-to-r from-black/40 via-transparent to-black/20"></div>
    
    <!-- Main Content in Column -->
    <div class="relative h-full flex flex-col justify-between p-6 md:p-8 lg:p-10 text-white">
      
      <!-- Superior Section: Logo, Edition, HostFlag -->
      <div class="flex flex-col gap-4">
        <div class="flex items-start justify-between">
          <!-- Logo -->
          <div class="relative group/logo">
            <div class="w-32 h-32 sm:w-40 sm:h-40 md:w-48 md:h-48 lg:w-60 lg:h-60 transition-all duration-300 group-hover:scale-105 group-hover:rotate-3">
              <Image
                src={image}
                alt={`${name} Logo`}
                class="w-full h-full object-contain drop-shadow-lg"
                width={300}
                loading={loadingType || "lazy"}
              />
            </div>
            <!-- Glow effect -->
            <div class="absolute inset-0 w-16 h-16 md:w-20 md:h-20 lg:w-24 lg:h-24 rounded-2xl bg-emerald-400/20 blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 -z-10"></div>
          </div>
        </div>
        
        <!-- Flag and Name -->
        <div class="space-y-2">
          <div class="flex flex-col md:flex-row md:items-center gap-2">
            {hostFlag && 
            <Image src={hostFlag} alt="Host Flag" class="max-w-6 sm:max-w-10 md:max-w-11 h-4 sm:h-6 md:mt-1 md:h-7 lg:h-9 lg:max-w-14 xl:max-w-auto rounded-md object-cover" 
              width={100}
              quality={70}
              format="webp"
              loading={loadingType || "lazy"}
            />}
            <h2 class="text-xl sm:text-3xl md:text-4xl lg:text-5xl font-black tracking-tight text-transparent bg-clip-text bg-gradient-to-r from-white via-emerald-200 to-white leading-tight">
              {name}
            </h2>
          </div>
          
          <!-- Decorative line -->
          <div class="w-20 h-1 bg-gradient-to-r from-emerald-400 via-blue-400 to-emerald-400 rounded-full transform group-hover:w-32 transition-all duration-500"></div>
        </div>
      </div>
      
      <!-- Discarded stats section -->
      {/*<div class="space-y-4 mt-2">
         <div class="flex flex-wrap gap-4 md:gap-6">
          {champion && (
            <div class="flex items-center gap-3 backdrop-blur-sm bg-yellow-500/10 border border-yellow-400/20 rounded-xl px-4 py-3 group/stat hover:bg-yellow-500/20 transition-all duration-300">
              <div class="text-2xl animate-bounce-slow"><Star class="w-8 h-8 mx-auto fill-amber-400" /></div>
              <div>
                <div class="text-xs text-yellow-200/80 uppercase tracking-wide font-medium">Winner</div>
                <div class="text-yellow-100 font-bold text-lg">{champion}</div>
              </div>
            </div>
          )}
          
          {host && (
            <div class="flex items-center gap-3 backdrop-blur-sm bg-emerald-500/10 border border-emerald-400/20 rounded-xl px-4 py-3 group/stat hover:bg-emerald-500/20 transition-all duration-300">
              <div class="text-2xl"><House class="w-8 h-8 mx-auto mb-1 fill-emerald-400" /></div>
              <div>
                <div class="text-xs text-emerald-200/80 uppercase tracking-wide font-medium">Host</div>
                <div class="text-emerald-100 font-bold text-lg">{host}</div>
              </div>
            </div>
          )}
          
          <div class="flex items-center gap-3 backdrop-blur-sm bg-blue-500/10 border border-blue-400/20 rounded-xl px-4 py-3 group/stat hover:bg-blue-500/20 transition-all duration-300">
            <div class="text-2xl"><People class="w-8 h-8 mx-auto fill-blue-400" /></div>
            <div>
              <div class="text-xs text-blue-200/80 uppercase tracking-wide font-medium">Participants</div>
              <div class="text-blue-100 font-bold text-lg">{participants.length}</div>
            </div>
          </div>
        </div>*/}
        
        <!-- Hover indicator -->
        <div class="flex items-center gap-2 mt-2 text-emerald-300/60 group-hover:text-emerald-300 transition-all duration-300">
          <span class="text-sm font-medium">View Details</span>
          <svg class="w-4 h-4 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </div>
      </div>
    </div>
    
    <!-- Brightness effect that moves -->
    <div class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-700 pointer-events-none">
      <div class="absolute top-0 left-0 w-full h-full">
        <div class="absolute top-0 left-0 w-32 h-full bg-gradient-to-r from-transparent via-white/10 to-transparent transform -skew-x-12 -translate-x-full group-hover:translate-x-full transition-transform duration-1000 ease-out"></div>
      </div>
    </div>
  </div>
</a>

<style>
  .bg-grid-pattern {
    background-image: 
      linear-gradient(rgba(16, 185, 129, 0.1) 1px, transparent 1px),
      linear-gradient(to right, rgba(16, 185, 129, 0.1) 1px, transparent 1px);
    background-size: 40px 40px;
  }
  
  .animate-pulse-slow {
    animation: pulse-slow 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  .animate-bounce-slow {
    animation: bounce-slow 3s ease-in-out infinite;
  }
  
  @keyframes pulse-slow {
    0%, 100% {
      opacity: 0.5;
    }
    50% {
      opacity: 0.8;
    }
  }
  
  @keyframes bounce-slow {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-4px);
    }
  }
  
  /* Efecto glassmorphism mejorado */
  .group:hover .backdrop-blur-md {
    backdrop-filter: blur(20px);
  }
  
  /* Mejoras de accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    .animate-pulse-slow,
    .animate-bounce-slow {
      animation: none;
    }
    
    .group:hover .transform {
      transform: none;
    }
  }
</style>