---
import type { CollectionEntry } from "astro:content";
import { Image } from 'astro:assets';

import {
  getMatchResult,
  getGoalsByTeam,
} from '../../lib/matchUtils.ts';

// Importamos las imágenes de los miembros
const images = import.meta.glob<{ default: ImageMetadata }>("/src/assets/images/members/*.{jpeg,jpg,png,gif,svg}");

interface Props {
  members: CollectionEntry<'members'>[];
  matches: CollectionEntry<'matches'>[];
}

// Extraemos props
const { members, matches } = Astro.props;

// Creamos un mapa de estadísticas por equipo
type TeamStats = {
  id: number;
  name: string;
  code?: string;
  flagPath?: string;
  additionalPoints: number;
  tournamentsPlayed: Set<number>;
  // tournamentsWon: number;
  played: number;
  won: number;
  draw: number;
  lost: number;
  points: number;
  goalsFor: number;
  goalsAgainst: number;
  performance: number;
  totalPoints: number;
};

const teamStats: Record<string, TeamStats> = {};
// Recorremos los miembros y los inicializamos en el mapa de estadísticas
for (const member of members) {
  teamStats[member.name] = {
    id: member.id,
    name: member.name,
    code: member.code,
    flagPath: member.flagPath,
    additionalPoints: member.additionalPoints || 0,
    tournamentsPlayed: new Set<number>(),
    // tournamentsWon: 0,
    played: 0,
    won: 0,
    draw: 0,
    lost: 0,
    points: 0,
    goalsFor: 0,
    goalsAgainst: 0,
    performance: 0,
    totalPoints: 0,
  };
}
// Recorremos los partidos y actualizamos las estadísticas de cada equipo
for (const match of matches) {
  
  if (match.status !== "played") continue;

  const { team1, team2, goals } = match;

  const team1Stats = teamStats[team1];
  const team2Stats = teamStats[team2];
  
  if (!team1Stats || !team2Stats) continue;
  
  // Por cada partido jugado, sumamos 1 a los partidos jugados de cada equipo
  team1Stats.played++;
  team2Stats.played++;
  
  // Por cada partido jugado, sumamos los goles de cada equipo
  const { team1: goalsT1, team2: goalsT2 } = getMatchResult(match);
  
  team1Stats.goalsFor += goalsT1;
  team2Stats.goalsFor += goalsT2;
  team1Stats.goalsAgainst += goalsT2;
  team2Stats.goalsAgainst += goalsT1;

  // Añadimos el torneo a los torneos jugados de cada equipo
  team1Stats.tournamentsPlayed.add(match.tournament_id);
  team2Stats.tournamentsPlayed.add(match.tournament_id);

  if (goalsT1 > goalsT2) {
    team1Stats.won++;
    team1Stats.points += 3;
    team2Stats.lost++;
  } else if (goalsT2 > goalsT1) {
    team2Stats.won++;
    team2Stats.points += 3;
    team1Stats.lost++;
  } else {
    team1Stats.draw++;
    team2Stats.draw++;
    team1Stats.points += 1;
    team2Stats.points += 1;
  }
}

// Calculamos el total de puntos (score + additionalPoints + puntos obtenidos en partidos)
for (const team of Object.values(teamStats)) {
  team.totalPoints = team.points + team.additionalPoints;
  team.performance = team.played > 0 ? (team.points / (team.played * 3)) * 100 : 0;
}

// Ordenamos por total de puntos (score + additionalPoints + puntos obtenidos en partidos)
const sortedStats = Object.values(teamStats).sort((a, b) => {
  // 1. Total de puntos
  const totalA = a.totalPoints;
  const totalB = b.totalPoints;
  if (totalB !== totalA) return totalB - totalA;

  // 2. Performance (porcentaje)
  if (b.performance !== a.performance) return b.performance - a.performance;

  // 3. Torneos jugados (mayor cantidad)
  if (b.tournamentsPlayed.size !== a.tournamentsPlayed.size) {
    return b.tournamentsPlayed.size - a.tournamentsPlayed.size;
  }

  // 4. Diferencia de gol (goles a favor - goles en contra)
  const diffA = a.goalsFor - a.goalsAgainst;
  const diffB = b.goalsFor - b.goalsAgainst;
  return diffB - diffA;
});
---

<div class="container mx-auto p-6 flex flex-col justify-center items-center">
  <h1 class="text-3xl font-bold mb-6">Historical Table</h1>
  <table class="min-w-full w-full table-auto border-collapse text-sm">
    <thead class="bg-green-800 text-white">
      <tr>
        <th class="px-4 py-2 text-center rounded-tl-lg">Pos</th>
        <th class="px-2 py-2 text-center"></th>
        <th class="px-2 py-2 text-left">Team</th>
        <th class="px-2 py-2 text-center">TP</th>
        <th class="px-2 py-2 text-center">Pts</th>
        <th class="px-2 py-2 text-center">Pld</th>
        <th class="px-2 py-2 text-center">W</th>
        <th class="px-2 py-2 text-center">D</th>
        <th class="px-2 py-2 text-center">L</th>
        <th class="px-2 py-2 text-center">GF</th>
        <th class="px-2 py-2 text-center">GA</th>
        <th class="px-2 py-2 text-center">GD</th>
        <!-- <th class="px-2 py-2 text-center">TW</th> -->
        <th class="px-4 text-center rounded-tr-lg">PR</th>
      </tr>
    </thead>
    <tbody class=" text-center">
      {sortedStats.map((team, index) => (
        <tr class="border-b border-green-700 hover:bg-green-900/30 transition duration-150">
          <td class="px-2 py-2">{index + 1}</td>
          <td class="px-2 py-2">
            {team.flagPath && <Image src={images[team.flagPath]()} alt={team.name} 
            width={32} 
            height={32}
            class="h-6 w-auto object-cover rounded inline-block" />}
          </td>
          <td class="px-2 py-2 text-left"><a href={`/members/${members.find(m => m.name === team.name)?.slug}`} class="font-semibold hover:underline">{team.name}</a></td>
          <td class="px-2 py-2 text-green-200">{team.tournamentsPlayed.size}</td>
          <td class="px-2 py-2 font-bold">{team.totalPoints}{team.additionalPoints > 0 && '*'}</td>
          <td class="px-2 py-2 text-green-200">{team.played}</td>
          <td class="px-2 py-2 text-green-200">{team.won}</td>
          <td class="px-2 py-2 text-green-200">{team.draw}</td>
          <td class="px-2 py-2 text-green-200">{team.lost}</td>
          <td class="px-2 py-2 text-green-200">{team.goalsFor}</td>
          <td class="px-2 py-2 text-green-200">{team.goalsAgainst}</td>
          <td class="px-2 py-2 text-green-200">{team.goalsFor - team.goalsAgainst}</td>
          {/* <td class="px-2 py-2">{team.tournamentsWon}</td> */}
          <td class="px-2 py-2">{team.performance.toFixed(2)}</td>
        </tr>
      ))}
    </tbody>
  </table>
</div>
