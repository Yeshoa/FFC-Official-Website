---
import { Image } from "astro:assets";
import type { ImageMetadata } from 'astro';
// import { tournaments } from '../content/tournaments';
import { getCollection } from 'astro:content';
const tournaments = await getCollection('tournaments');
const sortedTournaments = tournaments.sort((a, b) => a.data.id - b.data.id); // Ordenar por ID
const { currentTournament } = Astro.props;
// Importamos las imágenes de los banners de los torneos
// Usamos import.meta.glob para cargar las imágenes de forma dinámica
// const images = import.meta.glob<{ default: ImageMetadata }>("/src/assets/images/tournaments/**/*.{jpeg,jpg,png,gif,svg}", ({ eager: true }));
// Convertimos el objeto de imágenes a un formato más fácil de usar (ruta -> ImageMetadata)
// Esto nos permite acceder a las imágenes usando su ruta como clave
/* const imageMap = Object.fromEntries(
  Object.entries(images).map(([path, module]) => [path, module.default])
); */
---

<div class="flex justify-center absolute top-0 left-0 w-full items-center px-6 bg-black/90">
  <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-auto">
    {sortedTournaments.slice().reverse().map((tournament) => {
      const isActive = tournament.data.id === currentTournament.id;
      return (
        <a 
          href={isActive ? "#" : `/${tournament.data.type}/${tournament.data.edition}`} 
          key={tournament.data.name} 
          class={` flex relative py-2 overflow-hidden hover:text-white
            justify-center font-semibold items-center text-green-300 group ${isActive ? "text-white  cursor-default pointer-events-none" : ""}`}
        >
          <h2 class={`border-b border-transparent ${isActive ? "border-b border-white" : ""}`}>{tournament.data.name}  </h2>
        </a>
      );
    })}
  </div>
</div>
